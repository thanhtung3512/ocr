version: '3.7'

services:
# Start messaging broker
  rabbitmq:
    image: rabbitmq:3.6.5-management
    hostname: "rabbit"
    deploy: 
      replicas: 2
    networks:
      - overlay
    ports:
      - "5672:5672"
      - "15672:15672" #Management Server
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "Phaish9ohbaidei6oole"
      #RABBITMQ_DISK_FREE_LIMIT: "1GB"

  # Start transformation worker
  strokewidthtransform:
    image: thanhtung3512/open-ocr-preprocessor
    volumes:
      - /var/ocr/docker-compose/scripts/:/opt/ocr/
    dns: ["8.8.8.8"]
    networks:
      - overlay
    depends_on:
      - rabbitmq
    command: "/opt/ocr/open-ocr-preprocessor -amqp_uri amqp://admin:Phaish9ohbaidei6oole@rabbit/ -preprocessor stroke-width-transform"

  # Start OCR worker
  openocrworker:
    image: thanhtung3512/${OPEN_OCR_INSTANCE}
    deploy:
      replicas: 5
    volumes:
      - /var/ocr/docker-compose/scripts/:/opt/ocr/
    dns: ["8.8.8.8"]
    networks:
      - overlay
    depends_on:
      - rabbitmq
    command: "/opt/ocr/open-ocr-worker -amqp_uri amqp://admin:Phaish9ohbaidei6oole@rabbit/"
    environment: 
      GOOGLE_APPLICATION_CREDENTIALS: "/opt/ocr/apivision.json"

  # Start http server
  openocr:
    image: thanhtung3512/${OPEN_OCR_INSTANCE}
    deploy:
      replicas: 5
    volumes:
      - /var/ocr/docker-compose/scripts/:/opt/ocr/
    ports:
      - "8888:8888"
    dns: ["8.8.8.8"]
    networks:
      - overlay
    depends_on:
      - rabbitmq
      - openocrworker
      - strokewidthtransform
    command: "/opt/ocr/open-ocr-httpd -amqp_uri amqp://admin:Phaish9ohbaidei6oole@rabbit/ -http_port 8888"
networks:
  overlay:
